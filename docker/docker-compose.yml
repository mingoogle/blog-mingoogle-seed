version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=seed
      - POSTGRES_PASSWORD=seed
    volumes:
      - pgdb:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.2.2
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log:/var/lib/zookeeper/log

  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.2.2
    hostname: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - kafka-data:/var/lib/kafka/data

  # Service-Seed Server List
  auth:
    container_name: auth
    build:
      context: ../server
      dockerfile: ./Dockerfile
      args:
        SERVER_NAME: auth
    depends_on:
      - "postgres"
    environment:
      NODE_ENV: development
    hostname: auth
    ports:
      - '4000:4000'

  main:
    container_name: main
    build:
      context: ../server
      dockerfile: ./Dockerfile
      args:
        SERVER_NAME: main
    depends_on:
      - "postgres"
    environment:
      NODE_ENV: development
    hostname: main
    ports:
      - '3000:3000'

volumes:
  pgdb:
  zk-data:
  zk-log:
  kafka-data:
